<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QrBn/9k=
</value>
  </data>
</root>